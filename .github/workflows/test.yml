name: Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  phpunit:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2, 8.3, 8.4]
        laravel: [10.*, 11.*]
        include:
          - php: 8.4
            laravel: 11.*
            testbench: ^9.0
          - php: 8.3
            laravel: 11.*
            testbench: ^9.0
          - php: 8.2
            laravel: 11.*
            testbench: ^9.0
          - php: 8.4
            laravel: 10.*
            testbench: ^8.0|^9.0
          - php: 8.3
            laravel: 10.*
            testbench: ^8.0|^9.0
          - php: 8.2
            laravel: 10.*
            testbench: ^8.0|^9.0
          - php: 8.1
            laravel: 10.*
            testbench: ^8.0
        exclude:
          # Exclude incompatible combinations
          - php: 8.1
            laravel: 11.*

    name: P${{ matrix.php }} on L${{ matrix.laravel }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: xdebug
          extensions: bcmath, sqlite, pdo-sqlite

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.php }}-${{ matrix.laravel }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.php }}-
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-
            ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false
